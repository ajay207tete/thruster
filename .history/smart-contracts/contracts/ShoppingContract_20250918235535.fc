import "stdlib.fc";

global int lastOrderId;

() createOrder(slice productDetails, slice productImage) {
    lastOrderId = lastOrderId + 1;
    ;; Store order details (simplified)
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    ;; Handle TON payment
    if (msg_value > 0) {
        ;; Assume payment for last order
        ;; Mark as paid if amount sufficient
    }
}

() recv_external(slice in_msg) impure {
    ;; Handle external messages
    int op = in_msg~load_uint(32);
    if (op == 1) {
        ;; createOrder
        slice productDetails = in_msg~load_ref().begin_parse();
        slice productImage = in_msg~load_ref().begin_parse();
        createOrder(productDetails, productImage);
    }
}

() withdraw() {
    ;; Withdraw funds to owner
    int balance = get_balance();
    send_raw_message(begin_cell().store_uint(0x10, 6).store_slice(my_address()).store_coins(balance).store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1).end_cell(), 64);
}
